=============================================================================
List of generated methods in project: Lab1Questao3

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "DirecaoDireitaOut" (component BitIO)
   - DirecaoDireitaOut_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].
   - DirecaoDireitaOut_PutVal -The specified output value is set. If the direction is [input], the component saves the value to 
                a memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - DirecaoDireitaOut_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - DirecaoDireitaOut_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "DirecaoEsquerdaOut" (component BitIO)
   - DirecaoEsquerdaOut_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].
   - DirecaoEsquerdaOut_PutVal -The specified output value is set. If the direction is [input], the component saves the value 
                to a memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - DirecaoEsquerdaOut_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - DirecaoEsquerdaOut_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.

Module "DirecaoDireitaIn" (component BitIO)
   - DirecaoDireitaIn_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].

Module "DirecaoEsquerdaIn" (component BitIO)
   - DirecaoEsquerdaIn_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - DirecaoEsquerdaIn_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].
   - DirecaoEsquerdaIn_PutVal -The specified output value is set. If the direction is [input], the component saves the value to 
                a memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - DirecaoEsquerdaIn_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - DirecaoEsquerdaIn_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "AumentarVelocidade" (component BitIO)
   - AumentarVelocidade_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].

Module "DiminuirVelocidade" (component BitIO)
   - DiminuirVelocidade_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is 
                read and returned. If the direction is [output] then the last written value is returned (see <Safe mode> 
                property for limitations). This method cannot be disabled if direction is [input].

Module "LigarParaBrisa" (component BitIO)
   - LigarParaBrisa_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].

Module "VelocidadeParaBrisa" (component PWM)
   - VelocidadeParaBrisa_Enable -This method enables the component - it starts the signal generation. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - VelocidadeParaBrisa_Disable -This method disables the component - it stops the signal generation and events calling. When 
                the timer is disabled, it is possible to call <ClrValue> and <SetValue> methods.
   - VelocidadeParaBrisa_SetRatio8 -This method sets a new duty-cycle ratio. Ratio is expressed as an 8-bit unsigned integer 
                number. 0 - FF value is proportional to ratio 0 - 100%. The method is available only if it is not selected list 
                of predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                capabilities and on the selected period.
   - VelocidadeParaBrisa_SetRatio16 -This method sets a new duty-cycle ratio. Ratio is expressed as a 16-bit unsigned integer 
                number. 0 - FFFF value is proportional to ratio 0 - 100%. The method is available only if it is not selected 
                list of predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                possibilities and on the selected period.
   - VelocidadeParaBrisa_SetDutyTicks16 -This method sets the new duty value of the output signal. The duty is expressed in CPU 
                ticks as a 16-bit unsigned integer number. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.
   - VelocidadeParaBrisa_SetDutyTicks32 -This method sets the new duty value of the output signal. The duty is expressed in CPU 
                ticks as a 32-bit unsigned integer number. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.
   - VelocidadeParaBrisa_SetDutyUS -This method sets the new duty value of the output signal. The duty is expressed in 
                microseconds as a 16-bit unsigned integer number. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.
   - VelocidadeParaBrisa_SetDutyMS -This method sets the new duty value of the output signal. The duty is expressed in 
                milliseconds as a 16-bit unsigned integer number. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.

Module "Cpu"       (component MC9S12C32_80)
   - Cpu_EnableInt -Enable maskable interrupts
   - Cpu_DisableInt -Disable maskable interrupts
   - Cpu_SetWaitMode -Set low power mode - Wait mode.  For more information about the wait mode see documentation of this CPU.  
                Release from Wait mode: Reset or interrupt
   - Cpu_SetStopMode -Set low power mode - Stop mode.  For more information about the stop mode see documentation of this CPU.

===================================================================================
